from typing import Iterator, Generic, TypeVar, Callable, Any
from os import PathLike

K = TypeVar('K')
V = TypeVar('V')
InternalV = TypeVar('InternalV')

class SqliteDict(Generic[K, V]):
    def __init__(self, path: PathLike[str], encode: Callable[[V], Any], decode: Callable[[Any], V]) -> None: ...

    def commit(self) -> None: ...

    def __getitem__(self, k: K) -> V: ...

    def __iter__(self) -> Iterator[K]: ...

    def __len__(self) -> int: ...

    def __setitem__(self, k: K, v: V) -> None: ...

    def __delitem__(self, k: K) -> None: ...
