name: "per-lib-checks"
on: [push, pull_request, workflow_dispatch]
concurrency:
  group: build-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  cmake-build:
    name: Library CMake Build
    runs-on: ubuntu-20.04

    strategy:
      max-parallel: 1
      matrix:
        gpu_backend: ["cuda"]
      fail-fast: false
    steps:
      - name: Checkout Git Repository
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Install nix
        uses: cachix/install-nix-action@v25
        with:
          github_access_token: '${{ secrets.GITHUB_TOKEN }}'

      - uses: cachix/cachix-action@v14
        with:
          name: ff
          skipPush: true
          # authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'

      - name: setup nix develop shell
        uses: nicknovitski/nix-develop@v1.1.0
        with:
          arguments: "--accept-flake-config .#ci"

      - name: ccache
        uses: hendrikmuhs/ccache-action@v1.2

      # - name: Install system dependencies
      #   run: FF_GPU_BACKEND=${{ matrix.gpu_backend }} .github/workflows/helpers/install_dependencies.sh

      # - name: Install conda and FlexFlow dependencies
      #   uses: conda-incubator/setup-miniconda@v2
      #   with:
      #     activate-environment: flexflow
      #     environment-file: packaging/conda/environment.yml
      #     auto-activate-base: false

      - name: Run cmake
        run: |
          .github/workflows/helpers/build_${{ matrix.gpu_backend }}.sh

      - name: Build utils
        run: |
          cd build 
          make -j $(( $(nproc) < 2 ? 1 : $(nproc)-1 )) utils

      - name: Build op-attrs
        run: |
          cd build 
          make -j $(( $(nproc) < 2 ? 1 : $(nproc)-1 )) op-attrs

      - name: Build pcg
        run: |
          cd build
          make -j $(( $(nproc) < 2 ? 1 : $(nproc)-1 )) pcg

      - name: Build kernels
        run: |
          cd build
          make -j $(( $(nproc) < 2 ? 1 : $(nproc)-1 )) kernels
