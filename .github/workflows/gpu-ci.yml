name: "gpu-ci"
on:
  pull_request:
    paths:
      - "cmake/**"
      - "config/**"
      - "python/**"
      - "setup.py"
      - "include/**"
      - "src/**"
      - ".github/workflows/gpu-ci.yml"
      - "tests/multi_gpu_tests.sh"
  push:
    branches:
      - "master"
    paths:
      - "cmake/**"
      - "config/**"
      - "python/**"
      - "setup.py"
      - "include/**"
      - "src/**"
      - ".github/workflows/gpu-ci.yml"
      - "tests/multi_gpu_tests.sh"
  workflow_dispatch:

concurrency:
  group: gpu-ci-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  gpu-ci-concierge:
    name: GPU CI Concierge
    runs-on: ubuntu-20.04
    env:
      FLEXFLOW_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout Git Repository
        uses: actions/checkout@v3

      - name: Wait for daemon to be done
        run: |
          pip install pygithub
          python3 .github/workflows/helpers/gpu_ci_helper.py

  gpu-ci-flexflow:
    name: Single Machine, Multiple GPUs Tests
    runs-on: self-hosted
    needs: gpu-ci-concierge
    container:
      image: ghcr.io/flexflow/flexflow-environment-cuda:latest
      options: --gpus all --shm-size=8192m
    steps:
      - name: Install updated git version
        run: sudo add-apt-repository ppa:git-core/ppa -y && sudo apt update -y && sudo apt install -y --no-install-recommends git
      - name: Checkout Git Repository
        uses: actions/checkout@v3
        with:
          submodules: recursive

      - name: Build FlexFlow
        run: |
          export PATH=/opt/conda/bin:$PATH
          export FF_HOME=$(pwd)
          mkdir build
          cd build
          ../config/config.linux
          make -j

      - name: Check availability of FlexFlow Python interface (before installation)
        run: |
          export PATH=/opt/conda/bin:$PATH
          export FF_HOME=$(pwd)
          export PYTHONPATH="${FF_HOME}/python:${FF_HOME}/build/python:${PYTHONPATH}"
          # Import flexflow.core module in Python
          python -c "import flexflow.core; exit()"
          # Run test with native Python interpreter
          export FF_USE_NATIVE_PYTHON=1
          EXE="python"
          GPUS=4
          BATCHSIZE=$((GPUS * 64))
          FSIZE=14048
          ZSIZE=12192
          $EXE "$FF_HOME"/examples/python/keras/seq_mnist_mlp.py -ll:gpu "$GPUS" -ll:fsize "$FSIZE" -ll:zsize "$ZSIZE" -b ${BATCHSIZE} --only-data-parallel

      - name: Install FlexFlow
        run: |
          export PATH=/opt/conda/bin:$PATH
          export FF_HOME=$(pwd)
          cd build
          ../config/config.linux
          make install
          ldconfig

      - name: Check availability of FlexFlow Python interface (after installation)
        run: |
          export PATH=/opt/conda/bin:$PATH
          export FF_HOME=$(pwd)
          # Import flexflow.core module in Python
          python -c "import flexflow.core; exit()"
          # Run test with native Python interpreter (without PYTHONPATH)
          export FF_USE_NATIVE_PYTHON=1
          EXE="python"
          GPUS=4
          BATCHSIZE=$((GPUS * 64))
          FSIZE=14048
          ZSIZE=12192
          $EXE "$FF_HOME"/examples/python/keras/seq_mnist_mlp.py -ll:gpu "$GPUS" -ll:fsize "$FSIZE" -ll:zsize "$ZSIZE" -b ${BATCHSIZE} --only-data-parallel

      - name: Run multi-gpu tests
        run: |
          export PATH=/opt/conda/bin:$PATH
          export CUDNN_DIR=/usr/local/cuda
          export CUDA_DIR=/usr/local/cuda
          export FF_HOME=$(pwd)
          export FF_USE_NATIVE_PYTHON=1
          ./tests/multi_gpu_tests.sh 4
