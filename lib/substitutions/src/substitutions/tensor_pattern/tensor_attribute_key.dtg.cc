// THIS FILE WAS AUTO-GENERATED BY proj. DO NOT MODIFY IT!
// If you would like to modify this datatype, instead modify
// lib/substitutions/include/substitutions/tensor_pattern/tensor_attribute_key.enum.toml
/* proj-data
{
  "generated_from": "63a7c40c1e5b582f98b59750a35f0a08"
}
*/

#include "substitutions/tensor_pattern/tensor_attribute_key.dtg.h"

#include <sstream>
#include <stdexcept>

namespace std {
size_t hash<FlexFlow::TensorAttributeKey>::operator()(
    FlexFlow::TensorAttributeKey x) const {
  return std::hash<int>{}(static_cast<int>(x));
}
} // namespace std
namespace FlexFlow {
std::string format_as(TensorAttributeKey x) {
  switch (x) {
    case TensorAttributeKey::DIM_SIZES:
      return "DIM_SIZES";
    case TensorAttributeKey::DIM_DEGREES:
      return "DIM_DEGREES";
    default:
      std::ostringstream oss;
      oss << "Unknown TensorAttributeKey value " << static_cast<int>(x);
      throw std::runtime_error(oss.str());
  }
}
std::ostream &operator<<(std::ostream &s, TensorAttributeKey x) {
  return s << fmt::to_string(x);
}
} // namespace FlexFlow
namespace FlexFlow {
void to_json(::nlohmann::json &j, TensorAttributeKey x) {
  switch (x) {
    case TensorAttributeKey::DIM_SIZES:
      j = "DIM_SIZES";
      break;
    case TensorAttributeKey::DIM_DEGREES:
      j = "DIM_DEGREES";
      break;
    default:
      std::ostringstream oss;
      oss << "Unknown TensorAttributeKey value " << static_cast<int>(x);
      throw std::runtime_error(oss.str());
  }
}
void from_json(::nlohmann::json const &j, TensorAttributeKey &x) {
  std::string as_str = j.get<std::string>();
  if (as_str == "DIM_SIZES") {
    x = TensorAttributeKey::DIM_SIZES;
  } else if (as_str == "DIM_DEGREES") {
    x = TensorAttributeKey::DIM_DEGREES;
  } else {
    std::ostringstream oss;
    oss << "Unknown TensorAttributeKey value " << as_str;
    throw std::runtime_error(oss.str());
  }
}
} // namespace FlexFlow
namespace rc {
Gen<FlexFlow::TensorAttributeKey>
    Arbitrary<FlexFlow::TensorAttributeKey>::arbitrary() {
  return gen::element<FlexFlow::TensorAttributeKey>(
      FlexFlow::TensorAttributeKey::DIM_SIZES,
      FlexFlow::TensorAttributeKey::DIM_DEGREES);
}
} // namespace rc
