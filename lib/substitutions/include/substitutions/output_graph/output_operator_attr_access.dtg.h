// THIS FILE WAS AUTO-GENERATED BY proj. DO NOT MODIFY IT!
// If you would like to modify this datatype, instead modify
// lib/substitutions/include/substitutions/output_graph/output_operator_attr_access.struct.toml
/* proj-data
{
  "generated_from": "e3b3a741183fcb38cfa68aacb82e12d1"
}
*/

#ifndef _FLEXFLOW_LIB_SUBSTITUTIONS_INCLUDE_SUBSTITUTIONS_OUTPUT_GRAPH_OUTPUT_OPERATOR_ATTR_ACCESS_DTG_H
#define _FLEXFLOW_LIB_SUBSTITUTIONS_INCLUDE_SUBSTITUTIONS_OUTPUT_GRAPH_OUTPUT_OPERATOR_ATTR_ACCESS_DTG_H

#include "fmt/format.h"
#include "substitutions/operator_pattern/operator_attribute_expr.dtg.h"
#include "utils/graph.h"
#include <functional>
#include <ostream>
#include <tuple>

namespace FlexFlow {
struct OutputOperatorAttrAccess {
  OutputOperatorAttrAccess() = delete;
  OutputOperatorAttrAccess(::FlexFlow::Node const &node,
                           ::FlexFlow::OperatorAttributeExpr const &attr_expr);

  bool operator==(OutputOperatorAttrAccess const &) const;
  bool operator!=(OutputOperatorAttrAccess const &) const;
  bool operator<(OutputOperatorAttrAccess const &) const;
  bool operator>(OutputOperatorAttrAccess const &) const;
  bool operator<=(OutputOperatorAttrAccess const &) const;
  bool operator>=(OutputOperatorAttrAccess const &) const;
  ::FlexFlow::Node node;
  ::FlexFlow::OperatorAttributeExpr attr_expr;
};
} // namespace FlexFlow

namespace std {
template <>
struct hash<FlexFlow::OutputOperatorAttrAccess> {
  size_t operator()(FlexFlow::OutputOperatorAttrAccess const &) const;
};
} // namespace std

namespace FlexFlow {
std::string format_as(OutputOperatorAttrAccess const &);
std::ostream &operator<<(std::ostream &, OutputOperatorAttrAccess const &);
} // namespace FlexFlow

#endif // _FLEXFLOW_LIB_SUBSTITUTIONS_INCLUDE_SUBSTITUTIONS_OUTPUT_GRAPH_OUTPUT_OPERATOR_ATTR_ACCESS_DTG_H
