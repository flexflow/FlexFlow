// THIS FILE WAS AUTO-GENERATED BY proj. DO NOT MODIFY IT!
// If you would like to modify this datatype, instead modify
// lib/substitutions/include/substitutions/operator_pattern/operator_attribute_list_size.struct.toml
/* proj-data
{
  "generated_from": "30999ad6b0603e380bc33d32fa088e45"
}
*/

#ifndef _FLEXFLOW_LIB_SUBSTITUTIONS_INCLUDE_SUBSTITUTIONS_OPERATOR_PATTERN_OPERATOR_ATTRIBUTE_LIST_SIZE_DTG_H
#define _FLEXFLOW_LIB_SUBSTITUTIONS_INCLUDE_SUBSTITUTIONS_OPERATOR_PATTERN_OPERATOR_ATTRIBUTE_LIST_SIZE_DTG_H

#include "fmt/format.h"
#include "nlohmann/json.hpp"
#include "rapidcheck.h"
#include "substitutions/operator_pattern/operator_attribute_key.dtg.h"
#include <functional>
#include <ostream>
#include <tuple>

namespace FlexFlow {
struct OperatorAttributeListSize {
  OperatorAttributeListSize() = delete;
  explicit OperatorAttributeListSize(
      ::FlexFlow::OperatorAttributeKey const &attribute_key);

  bool operator==(OperatorAttributeListSize const &) const;
  bool operator!=(OperatorAttributeListSize const &) const;
  bool operator<(OperatorAttributeListSize const &) const;
  bool operator>(OperatorAttributeListSize const &) const;
  bool operator<=(OperatorAttributeListSize const &) const;
  bool operator>=(OperatorAttributeListSize const &) const;
  ::FlexFlow::OperatorAttributeKey attribute_key;
};
} // namespace FlexFlow

namespace std {
template <>
struct hash<::FlexFlow::OperatorAttributeListSize> {
  size_t operator()(::FlexFlow::OperatorAttributeListSize const &) const;
};
} // namespace std

namespace nlohmann {
template <>
struct adl_serializer<::FlexFlow::OperatorAttributeListSize> {
  static ::FlexFlow::OperatorAttributeListSize from_json(json const &);
  static void to_json(json &, ::FlexFlow::OperatorAttributeListSize const &);
};
} // namespace nlohmann

namespace rc {
template <>
struct Arbitrary<::FlexFlow::OperatorAttributeListSize> {
  static Gen<::FlexFlow::OperatorAttributeListSize> arbitrary();
};
} // namespace rc

namespace FlexFlow {
std::string format_as(OperatorAttributeListSize const &);
std::ostream &operator<<(std::ostream &, OperatorAttributeListSize const &);
} // namespace FlexFlow

#endif // _FLEXFLOW_LIB_SUBSTITUTIONS_INCLUDE_SUBSTITUTIONS_OPERATOR_PATTERN_OPERATOR_ATTRIBUTE_LIST_SIZE_DTG_H
