// THIS FILE WAS AUTO-GENERATED BY proj. DO NOT MODIFY IT!
// If you would like to modify this datatype, instead modify
// lib/op-attrs/include/op-attrs/parallel_tensor_shape/sum_degree.struct.toml
/* proj-data
{
  "generated_from": "e94a05618f2ad92dd7b3328a1d9c6786"
}
*/

#ifndef _FLEXFLOW_LIB_OP_ATTRS_INCLUDE_OP_ATTRS_PARALLEL_TENSOR_SHAPE_SUM_DEGREE_DTG_H
#define _FLEXFLOW_LIB_OP_ATTRS_INCLUDE_OP_ATTRS_PARALLEL_TENSOR_SHAPE_SUM_DEGREE_DTG_H

#include "fmt/format.h"
#include "nlohmann/json.hpp"
#include "rapidcheck.h"
#include <functional>
#include <ostream>
#include <tuple>

namespace FlexFlow {
struct SumDegree {
  SumDegree() = delete;
  explicit SumDegree(int const &value);

  bool operator==(SumDegree const &) const;
  bool operator!=(SumDegree const &) const;
  bool operator<(SumDegree const &) const;
  bool operator>(SumDegree const &) const;
  bool operator<=(SumDegree const &) const;
  bool operator>=(SumDegree const &) const;
  int value;
};
} // namespace FlexFlow

namespace std {
template <>
struct hash<::FlexFlow::SumDegree> {
  size_t operator()(::FlexFlow::SumDegree const &) const;
};
} // namespace std

namespace nlohmann {
template <>
struct adl_serializer<::FlexFlow::SumDegree> {
  static ::FlexFlow::SumDegree from_json(json const &);
  static void to_json(json &, ::FlexFlow::SumDegree const &);
};
} // namespace nlohmann

namespace rc {
template <>
struct Arbitrary<::FlexFlow::SumDegree> {
  static Gen<::FlexFlow::SumDegree> arbitrary();
};
} // namespace rc

namespace FlexFlow {
std::string format_as(SumDegree const &);
std::ostream &operator<<(std::ostream &, SumDegree const &);
} // namespace FlexFlow

#endif // _FLEXFLOW_LIB_OP_ATTRS_INCLUDE_OP_ATTRS_PARALLEL_TENSOR_SHAPE_SUM_DEGREE_DTG_H
