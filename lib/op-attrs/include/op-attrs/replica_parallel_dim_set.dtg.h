// THIS FILE WAS AUTO-GENERATED BY proj. DO NOT MODIFY IT!
// If you would like to modify this datatype, instead modify
// lib/op-attrs/include/op-attrs/replica_parallel_dim_set.struct.toml
/* proj-data
{
  "generated_from": "74230e2d18db5c059d3e7be0f25e746e"
}
*/

#ifndef _FLEXFLOW_LIB_OP_ATTRS_INCLUDE_OP_ATTRS_REPLICA_PARALLEL_DIM_SET_DTG_H
#define _FLEXFLOW_LIB_OP_ATTRS_INCLUDE_OP_ATTRS_REPLICA_PARALLEL_DIM_SET_DTG_H

#include "fmt/format.h"
#include "nlohmann/json.hpp"
#include "op-attrs/parallel_tensor_shape/discard_copy_degree.dtg.h"
#include "op-attrs/parallel_tensor_shape/sum_degree.dtg.h"
#include "rapidcheck.h"
#include <functional>
#include <ostream>
#include <tuple>

namespace FlexFlow {
struct ReplicaParallelDimSet {
  ReplicaParallelDimSet() = delete;
  explicit ReplicaParallelDimSet(
      ::FlexFlow::SumDegree const &sum_degree,
      ::FlexFlow::DiscardCopyDegree const &discard_copy_degree);

  bool operator==(ReplicaParallelDimSet const &) const;
  bool operator!=(ReplicaParallelDimSet const &) const;
  bool operator<(ReplicaParallelDimSet const &) const;
  bool operator>(ReplicaParallelDimSet const &) const;
  bool operator<=(ReplicaParallelDimSet const &) const;
  bool operator>=(ReplicaParallelDimSet const &) const;
  ::FlexFlow::SumDegree sum_degree;
  ::FlexFlow::DiscardCopyDegree discard_copy_degree;
};
} // namespace FlexFlow

namespace std {
template <>
struct hash<::FlexFlow::ReplicaParallelDimSet> {
  size_t operator()(::FlexFlow::ReplicaParallelDimSet const &) const;
};
} // namespace std

namespace nlohmann {
template <>
struct adl_serializer<::FlexFlow::ReplicaParallelDimSet> {
  static ::FlexFlow::ReplicaParallelDimSet from_json(json const &);
  static void to_json(json &, ::FlexFlow::ReplicaParallelDimSet const &);
};
} // namespace nlohmann

namespace rc {
template <>
struct Arbitrary<::FlexFlow::ReplicaParallelDimSet> {
  static Gen<::FlexFlow::ReplicaParallelDimSet> arbitrary();
};
} // namespace rc

namespace FlexFlow {
std::string format_as(ReplicaParallelDimSet const &);
std::ostream &operator<<(std::ostream &, ReplicaParallelDimSet const &);
} // namespace FlexFlow

#endif // _FLEXFLOW_LIB_OP_ATTRS_INCLUDE_OP_ATTRS_REPLICA_PARALLEL_DIM_SET_DTG_H
