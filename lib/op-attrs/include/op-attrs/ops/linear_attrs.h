// THIS FILE WAS AUTO-GENERATED BY proj. DO NOT MODIFY IT!
// If you would like to modify this datatype, instead modify
// lib/op-attrs/include/op-attrs/ops/linear_attrs.struct.toml

#ifndef _FLEXFLOW_LIB_OP_ATTRS_INCLUDE_OP_ATTRS_OPS_LINEAR_ATTRS_H
#define _FLEXFLOW_LIB_OP_ATTRS_INCLUDE_OP_ATTRS_OPS_LINEAR_ATTRS_H

#include "fmt/format.h"
#include "nlohmann/json.hpp"
#include "op-attrs/activation.h"
#include "op-attrs/datatype.h"
#include "op-attrs/regularizer_attrs.h"
#include "rapidcheck.h"
#include "utils/json.h"
#include <functional>
#include <ostream>
#include <sstream>
#include <tuple>

namespace FlexFlow {
struct LinearAttrs {
  LinearAttrs() = delete;
  LinearAttrs(int const &out_channels,
              bool const &use_bias,
              ::FlexFlow::DataType const &data_type,
              ::FlexFlow::Activation const &activation,
              std::optional<::FlexFlow::RegularizerAttrs> const &regularizer);

  bool operator==(LinearAttrs const &) const;
  bool operator!=(LinearAttrs const &) const;
  bool operator<(LinearAttrs const &) const;
  bool operator>(LinearAttrs const &) const;
  bool operator<=(LinearAttrs const &) const;
  bool operator>=(LinearAttrs const &) const;
  int out_channels;
  bool use_bias;
  ::FlexFlow::DataType data_type;
  ::FlexFlow::Activation activation;
  std::optional<::FlexFlow::RegularizerAttrs> regularizer;
};
} // namespace FlexFlow

namespace std {
template <>
struct hash<FlexFlow::LinearAttrs> {
  size_t operator()(FlexFlow::LinearAttrs const &) const;
};
} // namespace std

namespace nlohmann {
template <>
struct adl_serializer<FlexFlow::LinearAttrs> {
  static FlexFlow::LinearAttrs from_json(json const &);
  static void to_json(json &, FlexFlow::LinearAttrs const &);
};
} // namespace nlohmann

namespace rc {
template <>
struct Arbitrary<FlexFlow::LinearAttrs> {
  static Gen<FlexFlow::LinearAttrs> arbitrary();
};
} // namespace rc

namespace FlexFlow {
std::string format_as(LinearAttrs const &);
std::ostream &operator<<(std::ostream &, LinearAttrs const &);
} // namespace FlexFlow

#endif // _FLEXFLOW_LIB_OP_ATTRS_INCLUDE_OP_ATTRS_OPS_LINEAR_ATTRS_H
