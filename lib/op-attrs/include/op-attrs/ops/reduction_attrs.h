// THIS FILE WAS AUTO-GENERATED BY proj. DO NOT MODIFY IT!
// If you would like to modify this datatype, instead modify
// lib/op-attrs/include/op-attrs/ops/reduction_attrs.struct.toml

#ifndef _FLEXFLOW_LIB_OP_ATTRS_INCLUDE_OP_ATTRS_OPS_REDUCTION_ATTRS_H
#define _FLEXFLOW_LIB_OP_ATTRS_INCLUDE_OP_ATTRS_OPS_REDUCTION_ATTRS_H

#include "fmt/format.h"
#include "nlohmann/json.hpp"
#include "op-attrs/ff_dim.h"
#include "rapidcheck.h"
#include <functional>
#include <ostream>
#include <sstream>
#include <tuple>

namespace FlexFlow {
struct ReductionAttrs {
  ReductionAttrs() = delete;
  ReductionAttrs(::FlexFlow::ff_dim_t const &reduction_dim,
                 int const &reduction_degree);

  bool operator==(ReductionAttrs const &) const;
  bool operator!=(ReductionAttrs const &) const;
  bool operator<(ReductionAttrs const &) const;
  bool operator>(ReductionAttrs const &) const;
  bool operator<=(ReductionAttrs const &) const;
  bool operator>=(ReductionAttrs const &) const;
  ::FlexFlow::ff_dim_t reduction_dim;
  int reduction_degree;
};
} // namespace FlexFlow

namespace std {
template <>
struct hash<FlexFlow::ReductionAttrs> {
  size_t operator()(FlexFlow::ReductionAttrs const &) const;
};
} // namespace std

namespace nlohmann {
template <>
struct adl_serializer<FlexFlow::ReductionAttrs> {
  static FlexFlow::ReductionAttrs from_json(json const &);
  static void to_json(json &, FlexFlow::ReductionAttrs const &);
};
} // namespace nlohmann

namespace rc {
template <>
struct Arbitrary<FlexFlow::ReductionAttrs> {
  static Gen<FlexFlow::ReductionAttrs> arbitrary();
};
} // namespace rc

namespace FlexFlow {
std::string format_as(ReductionAttrs const &);
std::ostream &operator<<(std::ostream &, ReductionAttrs const &);
} // namespace FlexFlow

#endif // _FLEXFLOW_LIB_OP_ATTRS_INCLUDE_OP_ATTRS_OPS_REDUCTION_ATTRS_H
