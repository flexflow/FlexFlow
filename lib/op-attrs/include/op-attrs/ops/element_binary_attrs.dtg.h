// THIS FILE WAS AUTO-GENERATED BY proj. DO NOT MODIFY IT!
// If you would like to modify this datatype, instead modify
// lib/op-attrs/include/op-attrs/ops/element_binary_attrs.struct.toml
/* proj-data
{
  "generated_from": "2bb947c9cc92e3833ee88c908c539629"
}
*/

#ifndef _FLEXFLOW_LIB_OP_ATTRS_INCLUDE_OP_ATTRS_OPS_ELEMENT_BINARY_ATTRS_DTG_H
#define _FLEXFLOW_LIB_OP_ATTRS_INCLUDE_OP_ATTRS_OPS_ELEMENT_BINARY_ATTRS_DTG_H

#include "fmt/format.h"
#include "nlohmann/json.hpp"
#include "op-attrs/datatype.h"
#include "op-attrs/operator_type.h"
#include "rapidcheck.h"
#include <functional>
#include <ostream>
#include <tuple>

namespace FlexFlow {
struct ElementBinaryAttrs {
  ElementBinaryAttrs() = delete;
  ElementBinaryAttrs(::FlexFlow::OperatorType const &type,
                     ::FlexFlow::DataType const &compute_type,
                     bool const &should_broadcast_lhs,
                     bool const &should_broadcast_rhs);

  bool operator==(ElementBinaryAttrs const &) const;
  bool operator!=(ElementBinaryAttrs const &) const;
  bool operator<(ElementBinaryAttrs const &) const;
  bool operator>(ElementBinaryAttrs const &) const;
  bool operator<=(ElementBinaryAttrs const &) const;
  bool operator>=(ElementBinaryAttrs const &) const;
  ::FlexFlow::OperatorType type;
  ::FlexFlow::DataType compute_type;
  bool should_broadcast_lhs;
  bool should_broadcast_rhs;
};
} // namespace FlexFlow

namespace std {
template <>
struct hash<FlexFlow::ElementBinaryAttrs> {
  size_t operator()(FlexFlow::ElementBinaryAttrs const &) const;
};
} // namespace std

namespace nlohmann {
template <>
struct adl_serializer<FlexFlow::ElementBinaryAttrs> {
  static FlexFlow::ElementBinaryAttrs from_json(json const &);
  static void to_json(json &, FlexFlow::ElementBinaryAttrs const &);
};
} // namespace nlohmann

namespace rc {
template <>
struct Arbitrary<FlexFlow::ElementBinaryAttrs> {
  static Gen<FlexFlow::ElementBinaryAttrs> arbitrary();
};
} // namespace rc

namespace FlexFlow {
std::string format_as(ElementBinaryAttrs const &);
std::ostream &operator<<(std::ostream &, ElementBinaryAttrs const &);
} // namespace FlexFlow

#endif // _FLEXFLOW_LIB_OP_ATTRS_INCLUDE_OP_ATTRS_OPS_ELEMENT_BINARY_ATTRS_DTG_H
