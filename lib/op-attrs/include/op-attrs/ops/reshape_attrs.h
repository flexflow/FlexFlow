// THIS FILE WAS AUTO-GENERATED BY proj. DO NOT MODIFY IT!
// If you would like to modify this datatype, instead modify
// lib/op-attrs/include/op-attrs/ops/reshape_attrs.struct.toml

#ifndef _FLEXFLOW_LIB_OP_ATTRS_INCLUDE_OP_ATTRS_OPS_RESHAPE_ATTRS_H
#define _FLEXFLOW_LIB_OP_ATTRS_INCLUDE_OP_ATTRS_OPS_RESHAPE_ATTRS_H

#include "fmt/format.h"
#include "nlohmann/json.hpp"
#include "op-attrs/tensor_shape.h"
#include "rapidcheck.h"
#include <functional>
#include <ostream>
#include <sstream>
#include <tuple>

namespace FlexFlow {
struct ReshapeAttrs {
  ReshapeAttrs() = delete;
  ReshapeAttrs(::FlexFlow::TensorShape const &shape);

  bool operator==(ReshapeAttrs const &) const;
  bool operator!=(ReshapeAttrs const &) const;
  bool operator<(ReshapeAttrs const &) const;
  bool operator>(ReshapeAttrs const &) const;
  bool operator<=(ReshapeAttrs const &) const;
  bool operator>=(ReshapeAttrs const &) const;
  ::FlexFlow::TensorShape shape;
};
} // namespace FlexFlow

namespace std {
template <>
struct hash<FlexFlow::ReshapeAttrs> {
  size_t operator()(FlexFlow::ReshapeAttrs const &) const;
};
} // namespace std

namespace nlohmann {
template <>
struct adl_serializer<FlexFlow::ReshapeAttrs> {
  static FlexFlow::ReshapeAttrs from_json(json const &);
  static void to_json(json &, FlexFlow::ReshapeAttrs const &);
};
} // namespace nlohmann

namespace rc {
template <>
struct Arbitrary<FlexFlow::ReshapeAttrs> {
  static Gen<FlexFlow::ReshapeAttrs> arbitrary();
};
} // namespace rc

namespace FlexFlow {
std::string format_as(ReshapeAttrs const &);
std::ostream &operator<<(std::ostream &, ReshapeAttrs const &);
} // namespace FlexFlow

#endif // _FLEXFLOW_LIB_OP_ATTRS_INCLUDE_OP_ATTRS_OPS_RESHAPE_ATTRS_H
