// THIS FILE WAS AUTO-GENERATED BY proj. DO NOT MODIFY IT!
// If you would like to modify this datatype, instead modify
// lib/op-attrs/include/op-attrs/ops/layer_norm_attrs.struct.toml
/* proj-data
{
  "generated_from": "349deae8d9356d3eeacd7e7d069c3155"
}
*/

#ifndef _FLEXFLOW_LIB_OP_ATTRS_INCLUDE_OP_ATTRS_OPS_LAYER_NORM_ATTRS_DTG_H
#define _FLEXFLOW_LIB_OP_ATTRS_INCLUDE_OP_ATTRS_OPS_LAYER_NORM_ATTRS_DTG_H

#include "fmt/format.h"
#include "nlohmann/json.hpp"
#include "op-attrs/ff_dim.dtg.h"
#include "op-attrs/ff_dim.h"
#include "rapidcheck.h"
#include "utils/stack_vector.h"
#include <functional>
#include <ostream>
#include <tuple>

namespace FlexFlow {
struct LayerNormAttrs {
  LayerNormAttrs() = delete;
  explicit LayerNormAttrs(::FlexFlow::stack_vector<::FlexFlow::ff_dim_t,
                                                   MAX_TENSOR_DIM> const &axes,
                          bool const &elementwise_affine,
                          float const &eps);

  bool operator==(LayerNormAttrs const &) const;
  bool operator!=(LayerNormAttrs const &) const;
  bool operator<(LayerNormAttrs const &) const;
  bool operator>(LayerNormAttrs const &) const;
  bool operator<=(LayerNormAttrs const &) const;
  bool operator>=(LayerNormAttrs const &) const;
  ::FlexFlow::stack_vector<::FlexFlow::ff_dim_t, MAX_TENSOR_DIM> axes;
  bool elementwise_affine;
  float eps;
};
} // namespace FlexFlow

namespace std {
template <>
struct hash<::FlexFlow::LayerNormAttrs> {
  size_t operator()(::FlexFlow::LayerNormAttrs const &) const;
};
} // namespace std

namespace nlohmann {
template <>
struct adl_serializer<::FlexFlow::LayerNormAttrs> {
  static ::FlexFlow::LayerNormAttrs from_json(json const &);
  static void to_json(json &, ::FlexFlow::LayerNormAttrs const &);
};
} // namespace nlohmann

namespace rc {
template <>
struct Arbitrary<::FlexFlow::LayerNormAttrs> {
  static Gen<::FlexFlow::LayerNormAttrs> arbitrary();
};
} // namespace rc

namespace FlexFlow {
std::string format_as(LayerNormAttrs const &);
std::ostream &operator<<(std::ostream &, LayerNormAttrs const &);
} // namespace FlexFlow

#endif // _FLEXFLOW_LIB_OP_ATTRS_INCLUDE_OP_ATTRS_OPS_LAYER_NORM_ATTRS_DTG_H
