// THIS FILE WAS AUTO-GENERATED BY proj. DO NOT MODIFY IT!
// If you would like to modify this datatype, instead modify
// lib/op-attrs/include/op-attrs/ff_dim.struct.toml
/* proj-data
{
  "generated_from": "a5fa89a024e95c4f2d52681a74cab30f"
}
*/

#ifndef _FLEXFLOW_LIB_OP_ATTRS_INCLUDE_OP_ATTRS_FF_DIM_DTG_H
#define _FLEXFLOW_LIB_OP_ATTRS_INCLUDE_OP_ATTRS_FF_DIM_DTG_H

#include "fmt/format.h"
#include "nlohmann/json.hpp"
#include <functional>
#include <ostream>
#include <tuple>

namespace FlexFlow {
struct ff_dim_t {
  ff_dim_t() = delete;
  ff_dim_t(int const &value);

  bool operator==(ff_dim_t const &) const;
  bool operator!=(ff_dim_t const &) const;
  bool operator<(ff_dim_t const &) const;
  bool operator>(ff_dim_t const &) const;
  bool operator<=(ff_dim_t const &) const;
  bool operator>=(ff_dim_t const &) const;
  int value;
};
} // namespace FlexFlow

namespace std {
template <>
struct hash<FlexFlow::ff_dim_t> {
  size_t operator()(FlexFlow::ff_dim_t const &) const;
};
} // namespace std

namespace nlohmann {
template <>
struct adl_serializer<FlexFlow::ff_dim_t> {
  static FlexFlow::ff_dim_t from_json(json const &);
  static void to_json(json &, FlexFlow::ff_dim_t const &);
};
} // namespace nlohmann

namespace FlexFlow {
std::string format_as(ff_dim_t const &);
std::ostream &operator<<(std::ostream &, ff_dim_t const &);
} // namespace FlexFlow

#endif // _FLEXFLOW_LIB_OP_ATTRS_INCLUDE_OP_ATTRS_FF_DIM_DTG_H
