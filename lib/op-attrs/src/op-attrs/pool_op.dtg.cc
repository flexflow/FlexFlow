// THIS FILE WAS AUTO-GENERATED BY proj. DO NOT MODIFY IT!
// If you would like to modify this datatype, instead modify
// lib/op-attrs/include/op-attrs/pool_op.enum.toml
/* proj-data
{
  "generated_from": "ed1d531c6227306c909eb28eb0a66538"
}
*/

#include "op-attrs/pool_op.dtg.h"

#include <sstream>
#include <stdexcept>

namespace std {
size_t hash<FlexFlow::PoolOp>::operator()(FlexFlow::PoolOp x) const {
  return std::hash<int>{}(static_cast<int>(x));
}
} // namespace std
namespace FlexFlow {
std::string format_as(PoolOp x) {
  switch (x) {
    case PoolOp::MAX:
      return "MAX";
    case PoolOp::AVG:
      return "AVG";
    default:
      std::ostringstream oss;
      oss << "Unknown PoolOp value " << static_cast<int>(x);
      throw std::runtime_error(oss.str());
  }
}
std::ostream &operator<<(std::ostream &s, PoolOp x) {
  return s << fmt::to_string(x);
}
} // namespace FlexFlow
namespace FlexFlow {
void to_json(::nlohmann::json &j, PoolOp x) {
  switch (x) {
    case PoolOp::MAX:
      j = "MAX";
      break;
    case PoolOp::AVG:
      j = "AVG";
      break;
    default:
      std::ostringstream oss;
      oss << "Unknown PoolOp value " << static_cast<int>(x);
      throw std::runtime_error(oss.str());
  }
}
void from_json(::nlohmann::json const &j, PoolOp &x) {
  std::string as_str = j.get<std::string>();
  if (as_str == "MAX") {
    x = PoolOp::MAX;
  } else if (as_str == "AVG") {
    x = PoolOp::AVG;
  } else {
    std::ostringstream oss;
    oss << "Unknown PoolOp value " << as_str;
    throw std::runtime_error(oss.str());
  }
}
} // namespace FlexFlow
namespace rc {
Gen<FlexFlow::PoolOp> Arbitrary<FlexFlow::PoolOp>::arbitrary() {
  return gen::element<FlexFlow::PoolOp>(FlexFlow::PoolOp::MAX,
                                        FlexFlow::PoolOp::AVG);
}
} // namespace rc
