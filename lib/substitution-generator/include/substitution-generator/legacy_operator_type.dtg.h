// THIS FILE WAS AUTO-GENERATED BY proj. DO NOT MODIFY IT!
// If you would like to modify this datatype, instead modify
// lib/substitution-generator/include/substitution-generator/legacy_operator_type.enum.toml
/* proj-data
{
  "generated_from": "d6ba52e2b0d58b7cb533dae3894b0486"
}
*/

#ifndef _FLEXFLOW_LIB_SUBSTITUTION_GENERATOR_INCLUDE_SUBSTITUTION_GENERATOR_LEGACY_OPERATOR_TYPE_DTG_H
#define _FLEXFLOW_LIB_SUBSTITUTION_GENERATOR_INCLUDE_SUBSTITUTION_GENERATOR_LEGACY_OPERATOR_TYPE_DTG_H

#include "fmt/format.h"
#include "nlohmann/json.hpp"
#include "rapidcheck.h"
#include <functional>
#include <ostream>
#include <string>

namespace FlexFlow {
enum class LegacyOperatorType {
  NOOP,
  INPUT,
  WEIGHT,
  CONV2D,
  DROPOUT,
  LINEAR,
  BATCHMATMUL,
  POOL2D,
  SCALAR_MULTIPLY,
  SCALAR_ADD,
  SCALAR_FLOOR_DIV,
  SCALAR_TRUE_DIV,
  SCALAR_SUB,
  RELU,
  IDENTITY,
  SIGMOID,
  TANH,
  ELU,
  FLAT,
  SOFTMAX,
  BATCHNORM,
  CONCAT,
  SPLIT,
  EMBEDDING,
  CACHE,
  RESHAPE,
  REVERSE,
  TRANSPOSE,
  EW_ADD,
  EW_MUL,
  MATMUL,
  MUL,
  ENLARGE,
  SQUEEZE,
  UNSQUEEZE,
  EW_SUB,
  EW_DIV,
  EW_EQUAL,
  EW_GREATER,
  EW_LESS,
  EW_MAX,
  EW_MIN,
  REDUCE_ARGMAX,
  REDUCE_ARGMIN,
  REDUCE_MAX,
  REDUCE_MEAN,
  REDUCE_MIN,
  REDUCE_PROD,
  REDUCE_SUM,
  PAD,
  SHAPE,
  SIZE,
  TOPK,
  WHERE,
  CEIL,
  CAST,
  EXP,
  ROUND,
  LOG,
  LOGICAL_NOT,
  SQRT,
  SIN,
  COS,
  LEAKYRELU,
  SLICE,
  RESIZE,
  PRELU,
  GELU,
  MULTIHEAD_ATTENTION,
  FUSED,
  RSQRT,
  POW,
  MEAN,
  LAYERNORM,
  GATHER,
  BROADCAST,
  REPARTITION,
  COMBINE,
  REPLICATE,
  REDUCTION,
  BATCH,
  PIPELINE,
  FUSED_PARALLEL
};
std::string format_as(LegacyOperatorType);
std::ostream &operator<<(std::ostream &, LegacyOperatorType);
void to_json(::nlohmann::json &, LegacyOperatorType);
void from_json(::nlohmann::json const &, LegacyOperatorType &);
} // namespace FlexFlow
namespace std {
template <>
struct hash<FlexFlow::LegacyOperatorType> {
  size_t operator()(FlexFlow::LegacyOperatorType) const;
};
} // namespace std
namespace rc {
template <>
struct Arbitrary<FlexFlow::LegacyOperatorType> {
  static Gen<FlexFlow::LegacyOperatorType> arbitrary();
};
} // namespace rc

#endif // _FLEXFLOW_LIB_SUBSTITUTION_GENERATOR_INCLUDE_SUBSTITUTION_GENERATOR_LEGACY_OPERATOR_TYPE_DTG_H
