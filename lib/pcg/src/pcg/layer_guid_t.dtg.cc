// THIS FILE WAS AUTO-GENERATED BY proj. DO NOT MODIFY IT!
// If you would like to modify this datatype, instead modify
// lib/pcg/include/pcg/layer_guid_t.struct.toml
/* proj-data
{
  "generated_from": "a672ffe470fd1dde8299f91f3038ca7a"
}
*/

#include "pcg/layer_guid_t.dtg.h"

#include "utils/graph.h"
#include <sstream>

namespace FlexFlow {
layer_guid_t::layer_guid_t(::FlexFlow::Node const &raw_node)
    : raw_node(raw_node) {}
bool layer_guid_t::operator==(layer_guid_t const &other) const {
  return std::tie(this->raw_node) == std::tie(other.raw_node);
}
bool layer_guid_t::operator!=(layer_guid_t const &other) const {
  return std::tie(this->raw_node) != std::tie(other.raw_node);
}
bool layer_guid_t::operator<(layer_guid_t const &other) const {
  return std::tie(this->raw_node) < std::tie(other.raw_node);
}
bool layer_guid_t::operator>(layer_guid_t const &other) const {
  return std::tie(this->raw_node) > std::tie(other.raw_node);
}
bool layer_guid_t::operator<=(layer_guid_t const &other) const {
  return std::tie(this->raw_node) <= std::tie(other.raw_node);
}
bool layer_guid_t::operator>=(layer_guid_t const &other) const {
  return std::tie(this->raw_node) >= std::tie(other.raw_node);
}
} // namespace FlexFlow

namespace std {
size_t hash<FlexFlow::layer_guid_t>::operator()(
    ::FlexFlow::layer_guid_t const &x) const {
  size_t result = 0;
  result ^= std::hash<::FlexFlow::Node>{}(x.raw_node) + 0x9e3779b9 +
            (result << 6) + (result >> 2);
  return result;
}
} // namespace std

namespace FlexFlow {
std::string format_as(layer_guid_t const &x) {
  std::ostringstream oss;
  oss << "<layer_guid_t";
  oss << " raw_node=" << x.raw_node;
  oss << ">";
  return oss.str();
}
std::ostream &operator<<(std::ostream &s, layer_guid_t const &x) {
  return s << fmt::to_string(x);
}
} // namespace FlexFlow
