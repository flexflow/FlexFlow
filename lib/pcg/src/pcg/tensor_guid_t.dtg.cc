// THIS FILE WAS AUTO-GENERATED BY proj. DO NOT MODIFY IT!
// If you would like to modify this datatype, instead modify
// lib/pcg/include/pcg/tensor_guid_t.struct.toml
/* proj-data
{
  "generated_from": "dc15fcbb876ec70509dfa8b662963bc3"
}
*/

#include "pcg/tensor_guid_t.dtg.h"

#include "utils/graph.h"
#include <sstream>

namespace FlexFlow {
tensor_guid_t::tensor_guid_t(::FlexFlow::MultiDiOutput const &raw_graph_output)
    : raw_graph_output(raw_graph_output) {}
bool tensor_guid_t::operator==(tensor_guid_t const &other) const {
  return std::tie(this->raw_graph_output) == std::tie(other.raw_graph_output);
}
bool tensor_guid_t::operator!=(tensor_guid_t const &other) const {
  return std::tie(this->raw_graph_output) != std::tie(other.raw_graph_output);
}
bool tensor_guid_t::operator<(tensor_guid_t const &other) const {
  return std::tie(this->raw_graph_output) < std::tie(other.raw_graph_output);
}
bool tensor_guid_t::operator>(tensor_guid_t const &other) const {
  return std::tie(this->raw_graph_output) > std::tie(other.raw_graph_output);
}
bool tensor_guid_t::operator<=(tensor_guid_t const &other) const {
  return std::tie(this->raw_graph_output) <= std::tie(other.raw_graph_output);
}
bool tensor_guid_t::operator>=(tensor_guid_t const &other) const {
  return std::tie(this->raw_graph_output) >= std::tie(other.raw_graph_output);
}
} // namespace FlexFlow

namespace std {
size_t hash<FlexFlow::tensor_guid_t>::operator()(
    FlexFlow::tensor_guid_t const &x) const {
  size_t result = 0;
  result ^= std::hash<::FlexFlow::MultiDiOutput>{}(x.raw_graph_output) +
            0x9e3779b9 + (result << 6) + (result >> 2);
  return result;
}
} // namespace std

namespace FlexFlow {
std::string format_as(tensor_guid_t const &x) {
  std::ostringstream oss;
  oss << "<tensor_guid_t";
  oss << " raw_graph_output=" << x.raw_graph_output;
  oss << ">";
  return oss.str();
}
std::ostream &operator<<(std::ostream &s, tensor_guid_t const &x) {
  return s << fmt::to_string(x);
}
} // namespace FlexFlow
