// THIS FILE WAS AUTO-GENERATED BY proj. DO NOT MODIFY IT!
// If you would like to modify this datatype, instead modify
// lib/pcg/include/pcg/strided_rectangle.struct.toml
/* proj-data
{
  "generated_from": "817bbe017d179aa469822a4032d08836"
}
*/

#ifndef _FLEXFLOW_LIB_PCG_INCLUDE_PCG_STRIDED_RECTANGLE_DTG_H
#define _FLEXFLOW_LIB_PCG_INCLUDE_PCG_STRIDED_RECTANGLE_DTG_H

#include "fmt/format.h"
#include "nlohmann/json.hpp"
#include "op-attrs/dim_ordered.h"
#include "pcg/strided_rectangle_side.dtg.h"
#include "rapidcheck.h"
#include <functional>
#include <ostream>
#include <tuple>

namespace FlexFlow {
struct StridedRectangle {
  StridedRectangle() = delete;
  StridedRectangle(
      ::FlexFlow::FFOrdered<::FlexFlow::StridedRectangleSide> const &sides);

  bool operator==(StridedRectangle const &) const;
  bool operator!=(StridedRectangle const &) const;
  bool operator<(StridedRectangle const &) const;
  bool operator>(StridedRectangle const &) const;
  bool operator<=(StridedRectangle const &) const;
  bool operator>=(StridedRectangle const &) const;
  ::FlexFlow::FFOrdered<::FlexFlow::StridedRectangleSide> sides;
};
} // namespace FlexFlow

namespace std {
template <>
struct hash<FlexFlow::StridedRectangle> {
  size_t operator()(FlexFlow::StridedRectangle const &) const;
};
} // namespace std

namespace nlohmann {
template <>
struct adl_serializer<FlexFlow::StridedRectangle> {
  static FlexFlow::StridedRectangle from_json(json const &);
  static void to_json(json &, FlexFlow::StridedRectangle const &);
};
} // namespace nlohmann

namespace rc {
template <>
struct Arbitrary<FlexFlow::StridedRectangle> {
  static Gen<FlexFlow::StridedRectangle> arbitrary();
};
} // namespace rc

namespace FlexFlow {
std::string format_as(StridedRectangle const &);
std::ostream &operator<<(std::ostream &, StridedRectangle const &);
} // namespace FlexFlow

#endif // _FLEXFLOW_LIB_PCG_INCLUDE_PCG_STRIDED_RECTANGLE_DTG_H
