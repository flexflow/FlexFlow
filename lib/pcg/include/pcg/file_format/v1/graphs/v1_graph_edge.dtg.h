// THIS FILE WAS AUTO-GENERATED BY proj. DO NOT MODIFY IT!
// If you would like to modify this datatype, instead modify
// lib/pcg/include/pcg/file_format/v1/graphs/v1_graph_edge.struct.toml
/* proj-data
{
  "generated_from": "865097b569b831af049343e933834329"
}
*/

#ifndef _FLEXFLOW_LIB_PCG_INCLUDE_PCG_FILE_FORMAT_V1_GRAPHS_V1_GRAPH_EDGE_DTG_H
#define _FLEXFLOW_LIB_PCG_INCLUDE_PCG_FILE_FORMAT_V1_GRAPHS_V1_GRAPH_EDGE_DTG_H

#include "fmt/format.h"
#include "nlohmann/json.hpp"
#include <functional>
#include <ostream>
#include <tuple>

namespace FlexFlow {
struct V1GraphEdge {
  V1GraphEdge() = delete;
  V1GraphEdge(size_t const &srcNode,
              size_t const &srcIdx,
              size_t const &dstNode,
              size_t const &dstIdx);

  bool operator==(V1GraphEdge const &) const;
  bool operator!=(V1GraphEdge const &) const;
  bool operator<(V1GraphEdge const &) const;
  bool operator>(V1GraphEdge const &) const;
  bool operator<=(V1GraphEdge const &) const;
  bool operator>=(V1GraphEdge const &) const;
  size_t srcNode;
  size_t srcIdx;
  size_t dstNode;
  size_t dstIdx;
};
} // namespace FlexFlow

namespace std {
template <>
struct hash<FlexFlow::V1GraphEdge> {
  size_t operator()(FlexFlow::V1GraphEdge const &) const;
};
} // namespace std

namespace nlohmann {
template <>
struct adl_serializer<FlexFlow::V1GraphEdge> {
  static FlexFlow::V1GraphEdge from_json(json const &);
  static void to_json(json &, FlexFlow::V1GraphEdge const &);
};
} // namespace nlohmann

namespace FlexFlow {
std::string format_as(V1GraphEdge const &);
std::ostream &operator<<(std::ostream &, V1GraphEdge const &);
} // namespace FlexFlow

#endif // _FLEXFLOW_LIB_PCG_INCLUDE_PCG_FILE_FORMAT_V1_GRAPHS_V1_GRAPH_EDGE_DTG_H
