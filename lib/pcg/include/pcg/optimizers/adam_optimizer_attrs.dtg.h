// THIS FILE WAS AUTO-GENERATED BY proj. DO NOT MODIFY IT!
// If you would like to modify this datatype, instead modify
// lib/pcg/include/pcg/optimizers/adam_optimizer_attrs.struct.toml
/* proj-data
{
  "generated_from": "f49e1bebcb0ef2bc3c210073e3183d4d"
}
*/

#ifndef _FLEXFLOW_LIB_PCG_INCLUDE_PCG_OPTIMIZERS_ADAM_OPTIMIZER_ATTRS_DTG_H
#define _FLEXFLOW_LIB_PCG_INCLUDE_PCG_OPTIMIZERS_ADAM_OPTIMIZER_ATTRS_DTG_H

#include "fmt/format.h"
#include "nlohmann/json.hpp"
#include "rapidcheck.h"
#include <functional>
#include <ostream>
#include <tuple>

namespace FlexFlow {
struct AdamOptimizerAttrs {
  AdamOptimizerAttrs() = delete;
  AdamOptimizerAttrs(double const &alpha,
                     double const &beta1,
                     double const &beta2,
                     double const &weight_decay,
                     double const &alpha_t,
                     double const &beta_t,
                     double const &beta2_t);

  bool operator==(AdamOptimizerAttrs const &) const;
  bool operator!=(AdamOptimizerAttrs const &) const;
  bool operator<(AdamOptimizerAttrs const &) const;
  bool operator>(AdamOptimizerAttrs const &) const;
  bool operator<=(AdamOptimizerAttrs const &) const;
  bool operator>=(AdamOptimizerAttrs const &) const;
  double alpha;
  double beta1;
  double beta2;
  double weight_decay;
  double alpha_t;
  double beta_t;
  double beta2_t;
};
} // namespace FlexFlow

namespace std {
template <>
struct hash<FlexFlow::AdamOptimizerAttrs> {
  size_t operator()(FlexFlow::AdamOptimizerAttrs const &) const;
};
} // namespace std

namespace nlohmann {
template <>
struct adl_serializer<FlexFlow::AdamOptimizerAttrs> {
  static FlexFlow::AdamOptimizerAttrs from_json(json const &);
  static void to_json(json &, FlexFlow::AdamOptimizerAttrs const &);
};
} // namespace nlohmann

namespace rc {
template <>
struct Arbitrary<FlexFlow::AdamOptimizerAttrs> {
  static Gen<FlexFlow::AdamOptimizerAttrs> arbitrary();
};
} // namespace rc

namespace FlexFlow {
std::string format_as(AdamOptimizerAttrs const &);
std::ostream &operator<<(std::ostream &, AdamOptimizerAttrs const &);
} // namespace FlexFlow

#endif // _FLEXFLOW_LIB_PCG_INCLUDE_PCG_OPTIMIZERS_ADAM_OPTIMIZER_ATTRS_DTG_H
