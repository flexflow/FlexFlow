// THIS FILE WAS AUTO-GENERATED BY proj. DO NOT MODIFY IT!
// If you would like to modify this datatype, instead modify
// lib/pcg/include/pcg/machine_specification.struct.toml
/* proj-data
{
  "generated_from": "72c3ae372af189d0c8bae74c2dbbc531"
}
*/

#ifndef _FLEXFLOW_LIB_PCG_INCLUDE_PCG_MACHINE_SPECIFICATION_DTG_H
#define _FLEXFLOW_LIB_PCG_INCLUDE_PCG_MACHINE_SPECIFICATION_DTG_H

#include "fmt/format.h"
#include "nlohmann/json.hpp"
#include <functional>
#include <ostream>
#include <tuple>

namespace FlexFlow {
struct MachineSpecification {
  MachineSpecification() = delete;
  explicit MachineSpecification(int const &num_nodes,
                                int const &num_cpus_per_node,
                                int const &num_gpus_per_node,
                                float const &inter_node_bandwidth,
                                float const &intra_node_bandwidth);

  bool operator==(MachineSpecification const &) const;
  bool operator!=(MachineSpecification const &) const;
  bool operator<(MachineSpecification const &) const;
  bool operator>(MachineSpecification const &) const;
  bool operator<=(MachineSpecification const &) const;
  bool operator>=(MachineSpecification const &) const;
  int num_nodes;
  int num_cpus_per_node;
  int num_gpus_per_node;
  float inter_node_bandwidth;
  float intra_node_bandwidth;
};
} // namespace FlexFlow

namespace std {
template <>
struct hash<::FlexFlow::MachineSpecification> {
  size_t operator()(::FlexFlow::MachineSpecification const &) const;
};
} // namespace std

namespace nlohmann {
template <>
struct adl_serializer<::FlexFlow::MachineSpecification> {
  static ::FlexFlow::MachineSpecification from_json(json const &);
  static void to_json(json &, ::FlexFlow::MachineSpecification const &);
};
} // namespace nlohmann

namespace FlexFlow {
std::string format_as(MachineSpecification const &);
std::ostream &operator<<(std::ostream &, MachineSpecification const &);
} // namespace FlexFlow

#endif // _FLEXFLOW_LIB_PCG_INCLUDE_PCG_MACHINE_SPECIFICATION_DTG_H
