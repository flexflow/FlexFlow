#! /usr/bin/env python3

from typing import Any
from pathlib import Path
import subprocess
from ff_cmake import BuildType, CUDAArch, GasnetConduit, GPUBackend, FFBuildConfig

def main():
    import argparse

    p = argparse.ArgumentParser()

    p.add_argument('--cc', type=Path, default=None)
    p.add_argument('--cxx', type=Path, default=None)
    p.add_argument('--build-type', type=BuildType, default=BuildType.release, choices=BuildType.get_valid_values())
    p.add_argument('--no-python', action='store_false', dest='use_python')
    p.add_argument('--use-gasnet', action='store_true')
    p.add_argument('--build-all-examples', action='store_true')
    p.add_argument('--build-unit-tests', action='store_true')
    p.add_argument('--no-prebuilt-nccl', action='store_false', dest='use_prebuilt_nccl')
    p.add_argument('--use-prebuilt-legion', action='store_false', dest='use_prebuilt_legion')
    p.add_argument('--cuda-dir', default=None, type=Path)
    p.add_argument('--cudnn-dir', default=None, type=Path)
    p.add_argument('--cuda-arch', type=CUDAArch, default=CUDAArch.autodetect, choices=CUDAArch.get_valid_values())
    p.add_argument('--gasnet-conduit', type=GasnetConduit, default=GasnetConduit.ibv, choices=GasnetConduit.get_valid_values())
    p.add_argument('--rocm-path', default='/opt/rocm', type=Path)
    p.add_argument('--max-dim', default=str(5), type=int)
    p.add_argument('--use-avx2', action='store_true')
    p.add_argument('--gpu-backend', type=GPUBackend, default=GPUBackend.cuda, choices=GPUBackend.get_valid_values())
    p.add_argument('--use-ccache', action='store_true')

    args = p.parse_args()

    if args.cuda_dir is None and 'CONDA_PREFIX' in os.environ:
        args.cuda_dir = os.environ['CONDA_PREFIX']

    config = FFBuildConfig(
        c_compiler=args.cc,
        cxx_compiler=args.cxx,
        c_flags=[],
        nvcc_flags=[],
        ld_flags=[],
        install_dir=None,
        build_type=args.build_type,
        use_python=args.use_python,
        build_all_examples=args.build_all_examples,
        build_unit_tests=args.build_unit_tests,
        use_prebuilt_nccl=args.use_prebuilt_nccl,
        use_prebuilt_legion=args.use_prebuilt_legion,
        cuda_dir=args.cuda_dir,
        cudnn_dir=args.cudnn_dir,
        cuda_arch=args.cuda_arch,
        gasnet_conduit=args.gasnet_conduit,
        rocm_path=args.rocm_path,
        max_dim=args.max_dim,
        use_avx2=args.use_avx2,
        gpu_backend=args.gpu_backend,
        use_ccache=args.use_ccache,
    )
    config.run()

if __name__ == '__main__':
    main()

