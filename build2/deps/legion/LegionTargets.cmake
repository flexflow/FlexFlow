# Generated by CMake

if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.6)
   message(FATAL_ERROR "CMake >= 2.6.0 required")
endif()
cmake_policy(PUSH)
cmake_policy(VERSION 2.6...3.20)
#----------------------------------------------------------------
# Generated CMake target import file.
#----------------------------------------------------------------

# Commands may need to know the format version.
set(CMAKE_IMPORT_FILE_VERSION 1)

if(CMAKE_VERSION VERSION_LESS 3.0.0)
  message(FATAL_ERROR "This file relies on consumers using CMake 3.0.0 or greater.")
endif()

# Protect against multiple inclusion, which would fail when already imported targets are added once more.
set(_targetsDefined)
set(_targetsNotDefined)
set(_expectedTargets)
foreach(_expectedTarget Legion::RealmRuntime Legion::LegionRuntime Legion::Legion Legion::Realm)
  list(APPEND _expectedTargets ${_expectedTarget})
  if(NOT TARGET ${_expectedTarget})
    list(APPEND _targetsNotDefined ${_expectedTarget})
  endif()
  if(TARGET ${_expectedTarget})
    list(APPEND _targetsDefined ${_expectedTarget})
  endif()
endforeach()
if("${_targetsDefined}" STREQUAL "${_expectedTargets}")
  unset(_targetsDefined)
  unset(_targetsNotDefined)
  unset(_expectedTargets)
  set(CMAKE_IMPORT_FILE_VERSION)
  cmake_policy(POP)
  return()
endif()
if(NOT "${_targetsDefined}" STREQUAL "")
  message(FATAL_ERROR "Some (but not all) targets in this export set were already defined.\nTargets Defined: ${_targetsDefined}\nTargets not yet defined: ${_targetsNotDefined}\n")
endif()
unset(_targetsDefined)
unset(_targetsNotDefined)
unset(_expectedTargets)


# Create imported target Legion::RealmRuntime
add_library(Legion::RealmRuntime STATIC IMPORTED)

set_target_properties(Legion::RealmRuntime PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "USE_CUDA"
  INTERFACE_INCLUDE_DIRECTORIES "/home/ubuntu/repo-refactor/deps/legion/runtime;/home/ubuntu/repo-refactor/build2/deps/legion/runtime"
  INTERFACE_LINK_LIBRARIES "\$<LINK_ONLY:dl>;\$<LINK_ONLY:rt>;/usr/lib/x86_64-linux-gnu/libcuda.so"
)

# Create imported target Legion::LegionRuntime
add_library(Legion::LegionRuntime STATIC IMPORTED)

set_target_properties(Legion::LegionRuntime PROPERTIES
  INTERFACE_INCLUDE_DIRECTORIES "/usr/local/cuda/include;/home/ubuntu/repo-refactor/deps/legion/runtime;/home/ubuntu/repo-refactor/deps/legion/runtime/mappers;/home/ubuntu/repo-refactor/build2/deps/legion/runtime"
  INTERFACE_LINK_LIBRARIES "Threads::Threads;dl;/usr/lib/x86_64-linux-gnu/librt.a;/usr/lib/x86_64-linux-gnu/libcuda.so;Legion::RealmRuntime;\$<LINK_ONLY:ZLIB::ZLIB>"
)

# Create imported target Legion::Legion
add_library(Legion::Legion INTERFACE IMPORTED)

set_target_properties(Legion::Legion PROPERTIES
  INTERFACE_LINK_LIBRARIES "Legion::LegionRuntime"
)

# Create imported target Legion::Realm
add_library(Legion::Realm INTERFACE IMPORTED)

set_target_properties(Legion::Realm PROPERTIES
  INTERFACE_LINK_LIBRARIES "Legion::RealmRuntime"
)

# Import target "Legion::RealmRuntime" for configuration "Debug"
set_property(TARGET Legion::RealmRuntime APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG)
set_target_properties(Legion::RealmRuntime PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_DEBUG "CXX"
  IMPORTED_LOCATION_DEBUG "/home/ubuntu/repo-refactor/build2/deps/legion/lib/librealm.a"
  )

# Import target "Legion::LegionRuntime" for configuration "Debug"
set_property(TARGET Legion::LegionRuntime APPEND PROPERTY IMPORTED_CONFIGURATIONS DEBUG)
set_target_properties(Legion::LegionRuntime PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_DEBUG "CUDA;CXX"
  IMPORTED_LOCATION_DEBUG "/home/ubuntu/repo-refactor/build2/deps/legion/lib/liblegion.a"
  )

# This file does not depend on other imported targets which have
# been exported from the same project but in a separate export set.

# Commands beyond this point should not need to know the version.
set(CMAKE_IMPORT_FILE_VERSION)
cmake_policy(POP)
